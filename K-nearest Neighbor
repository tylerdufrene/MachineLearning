from movies import movie_dataset, movie_labels

def distance(movie1, movie2):
  squared_difference = 0
  for i in range(len(movie1)):
    squared_difference += (movie1[i] - movie2[i]) ** 2
  final_distance = squared_difference ** 0.5
  return final_distance

def classify(unknown, dataset, labels, k):
  distances = []
  num_good = 1
  num_bad = 0
  #Looping through all points in the dataset
  for title in dataset:
    movie = dataset[title]
    distance_to_point = distance(movie, unknown)
    #Adding the distance and point associated with that distance
    distances.append([distance_to_point, title])
  distances.sort()
  #Taking only the k closest points
  neighbors = distances[0:k]
  for movie in neighbors:
    title = movie[1]
  num_good += labels[title]
  num_bad += labels[title]
  if num_good > num_bad:
  	return 1
  else:
    return 0
  
print(classify([.4,.2,.9], movie_dataset, movie_labels, k=5))

#good movie was predicted

from movies import training_set, training_labels, validation_set, validation_labels

  
  
def find_validation_accuracy(training_set, training_labels, validation_set, validation_labels, k):
  num_correct = 0.0
  for title in validation_set:
    x = validation_set[title]
    guess = classify(x, training_set, training_labels, k)
    if guess == validation_labels[title]:
      num_correct += 1
  return num_correct/len(validation_set)

print(find_validation_accuracy(training_set, training_labels, validation_set, validation_labels, 3))  
